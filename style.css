/*============RESET===============*/
* {
  margin: 0; /*Resetando os espaços de todos os elementos*/
  padding: 0; /*Resetando o preenchimento interno*/
  box-sizing: border-box; /*Reseta o comportameto para ser cauculado a partir da borda das caixas*/
}

ul {
  list-style: none; /*Retirando todos os pontinhos dos menus*/
}

img {
  width: 100%; /*Toda imagem deve seguir 100% de larura*/
  height: auto; /*Toda imagem deve ter a autura automatica*/
}

a {
  text-decoration: none; /*Resetando as cores de todos os links*/
}

/*============VARIABLES===============*/
:root {
  --header-height: 4.5rem;

  /* colors */
  --hue: 159;
  /* HSL color mode */
  --base-color: hsl(var(--hue) 36% 57%);
  --base-color-second: hsl(var(--hue) 65% 88%);
  --base-color-alt: hsl(var(--hue) 57% 53%);
  --title-color: hsl(var(--hue) 41% 10%);
  --text-color: hsl(0 0% 46%);
  --text-color-light: hsl(0 0% 98%);
  --body-color: hsl(0 0% 98%);

  /* fonts */
  --title-font-size: 1.875rem;
  --subtitle-font-size: 1rem;

  --title-font: 'Poppins', sans-serif;
  --body-font: 'DM Sans', sans-serif;
}

/*============BASE===============*/
html {
  scroll-behavior: smooth;
}

body {
  font: 400 1rem var(--body-font); /*400 peso da fonte - 1rem tamanho normal da fonte - */
  background: var(--body-color);
  color: var(--text-color);
  -webkit-font-smoothing: antialiased; /*A propriedade CSS controla a aplicação de suavização de borda quando as fontes são renderizadas.webkit: se o navegador é um tipo webkit(o Google chrome está abilitado o webkit não esta abilitado em todos os navegadores) font-smooth = suavização de fonte / antialiased = suavizado*/
}
.title {
  font: 700 var(--title-font-size) var(--title-font);
  color: var(--title-color);
  -webkit-font-smoothing: auto; /*A propriedade CSS controla a aplicação de suavização de borda quando as fontes são renderizadas.webkit: se o navegador é um tipo webkit(o Google chrome está abilitado o webkit não esta abilitado em todos os navegadores)*/
}

.button {
  background: var(--base-color);
  color: var(--text-color-light);
  height: 3.5rem;
  width: 13.37rem;
  display: inline-flex; /*A tag (a) tem uma propriedade por padrão (isplay: inline) que não permite alterar a altura e largura  assim como a tag (span) */
  align-items: center; /*Desbloqueado pelo flex do display: inline-flex acima */
  padding: 0rem 2rem;
  border-radius: 0.25rem;
  font: 500 1rem var(--body-font);
  transition: backgroud 0.3s; /*Transição permitida apos usar o :hover / transition = transição / backgroud = fundo/ 0.3s tempo de transição*/
}

.button:hover {
  /*hover - Elemento com o mouse posicionado sobre ele*/
  background: var(--base-color-alt);
}

.divider-1 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 36%, 57%, 1),
    hsla(var(--hue), 65%, 88%, 0.34)
  ); /*linear-gradient é uma função que cria uma imagem que consiste em uma transição progressiva entre duas ou mais cores ao longo de uma linha reta. Seu resultado é um objeto do tipo de dados, que é um tipo especial de .linear-gradient()*/
}
/*============LAYOUT===============*/
#header {
  border-bottom: 1px solid #e4e4e4; /*Borda (border) a Baixo (bottom)*/
  margin-bottom: 2rem;
  display: flex;

  width: 100%;
  position: fixed; /*Posição ficha do header*/
  top: 0;
  left: 0;
  z-index: 100;
  background: var(--body-color);
}

#header.scroll {
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.15); /*Leve sombra no header*/
}


/*============LOGO===============*/

.logo {
  font: 700 1.31rem var(--title-font);
  color: var(--title-color);
}

.logo span {
  color: var(--base-color);
}

.logo-alt span {
  color: var(--body-color);
}

/*============NAVIGATION===============*/

nav {
  /*Navegação*/
  height: var(
    --header-height
  ); /*Altura: 4.5rem -- rem(Unidade de medida RELATIVA - ou seja RESPONSIVA) 72px/16=4,5rem (r = root, em= element)*/
  align-items: center; /*Alinhamento de itens*/
  display: flex; /*Define o elemento como um flex container, tornando os seus filhos flex-itens.*/
  justify-content: space-between; /*Justificando o conteudo: espaço entre*/
  width: 100%;
}

nav ul li {
  text-align: center;
}

nav ul li a {
  transition: color 0.2s; /*trasição da mudansa de cor quando o mouse está em cima*/
  position: relative;
}

nav ul li a:hover, /*Quando passar o mouse em cima do menu ele muda de cor*/
nav ul li a.active { 
  color: var(--base-color);
}

nav ul li a::after {
  /*after = Apos  (::after = é um sudo element)/ Apos o conteudo do 'a com o mouse e cima :hover'*/
  content: ''; /*todo sudo element tenho que colocar o content*/
  width: 0%;
  height: 2px;
  background: var(--base-color);

  position: absolute;
  left: 0;
  bottom: -1.5rem;

  transition: width 0.2s;
}

nav ul li a:hover::after,
nav ul li a.active::after{
  width: 100%;
}

nav .menu {
  opacity: 0; /*Opacidade*/
  visibility: hidden; /*visibility:hidden deixa de mostrar o elemento, ou seja, ele deixa de ser visível na página mas seu espaço continua ocupado, ou seja, o layout da página não é alterado por causa disto. É como você apagasse uma luz ali mas a lâmpada continua lá.*/
  top: -20rem;
  transition: 0.2s;
}

nav .menu ul {
  display: none;
}

/* =====Só será usado esses style quando for mostrado o menu.Quando for acrescentado a classe show ====*/
nav.show .menu {
  /*nav receber uma classe show*/
  opacity: 1;
  visibility: visible; /*visible (A caixa do elemento é visíve)*/

  background: var(--body-color);
  height: 100vh; /*Vh (viewport height = altura da janela de visualização) 100 pedaços da viewport*/
  width: 100vw;

  position: fixed;
  top: 0;
  left: 0;

  display: grid;
  place-content: center; /*Centraliza todos os itens no centro da tela*/
}

nav.show .menu ul {
  display: grid;
}

nav.show ul.grid {
  gap: 4rem;
}

/*  toggle menu  */
.toggle {
  color: var(--base-color);
  font-size: 1.5rem;
  cursor: pointer; /*Quando estiver com o mouse em cima do icone ele mudar para a mãozinha*/
}

nav .icon-close {
  /*icone 'X' que fecha o menu*/
  visibility: hidden;
  opacity: 0;

  position: absolute;
  right: 1.5rem;
  top: -1.5rem; /*O icone menu e fechar menu vai de -1.5rem até 1.5rem fazendo um efeito que ele venha de cima*/
  transition: 0.2s; /*Com a transição de 2 segundos o icone do menu esta pegandoa a opacidade do nav.show*/
}

nav.show div.icon-close {
  visibility: visible;
  opacity: 1;
  top: 1.5rem; /*O icone menu e fechar menu vai de -1.5rem até 1.5rem fazendo um efeito que ele venha de cima*/
}

/*============HOME===============*/
.container {
  margin-left: 1.5rem; /*margin-left(direito)*/
  margin-right: 1.5rem; /*margin-right(esquerdo)*/
}

.grid {
  display: grid; /*Vai abilitar novas funcionalidades no CSS para deixar mais flexivel*/
  gap: 2rem;
}

.section {
  padding: calc(5rem + var(--header-height)) 0;
}

.section .title {
  margin-bottom: 1rem;
}

.section .subtitle {
  font-size: var(--subtitle-font-size);
}

.section header {
  margin-bottom: 4rem;
}

.section header strong {
  color: var(--base-color);
}

#home {
  overflow: hidden; /*overflow = quando o conteúdo de um elemento é muito grande para caber em seu contexto de formatação de bloco - em ambas as direções/ hidden = O conteúdo é cortado, se necessário, para caber na caixa de preenchimento. Nenhuma barra de rolagem é fornecida e nenhum suporte para permitir que o usuário role (como arrastando ou usando uma roda de rolagem) é permitido*/
}
#home .container {
  margin: 0;
}

#home .image {
  position: relative;
}

#home .image::before {
  /*A declaração do pseudo-elemento ::before em um seletor cria um falso elemento (um elemento fictício) que nos permite adicionar conteúdo antes do conteúdo do elemento selecionado.*/
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute; /*O position Absolute é um grande quebra galho no CSS. Com ele você pode posicionar qualquer elemento de acordo com o elemento pai que tenha um position diferente de static.*/
  top: -16.8%; /*Deslocamento do topo*/
  left: 16.7%; /*Deslocamento para esquerda*/
  z-index: 0; /*z-index so e abilitado quando eu uso o position*/
}

#home .image img {
  position: relative; /*Utilizando o position Relative o elemento passa a aceitar as propriedades Top, Bottom, Left e Right. Com elas você pode alterar o posicionamento do elemento*/
  right: 2.93rem;
}

#home .image img,
#home .image::before {
  border-radius: 0.25rem;
}

#home .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  text-align: center;
}

#home .text h1 {
  margin-bottom: 1rem;
}

#home .text p {
  margin-bottom: 2rem;
  max-width: 100%;
}

/*============ABOUT===============*/
#about {
  background: white;
}
#about .container {
  margin: 0;
}

#about .image {
  position: relative;
}

#about .image::before {
  content: '';
  height: 100%;
  width: 100%;
  background: var(--base-color-second);
  position: absolute;
  top: -8.3%;
  left: -33%;
  z-index: 0;
}

#about .image img {
  position: relative;
}

#about .image img,
#about .image::before {
  border-radius: 0.25rem;
}

#about .text {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.divider-2 {
  height: 1px;
  background: linear-gradient(
    270deg,
    hsla(var(--hue), 65%, 88%, 0.34),
    hsla(var(--hue), 36%, 57%, 1)
  );
}

/*============SERVICES===============*/
.cards.grid {
  gap: 1.5rem; /*Espaços entre os cards de 1.5rem*/
}

.card {
  padding: 3.625rem 2rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08); /*Sombra dos cards*/
  border-bottom: 0.25rem solid var(--base-color); /*Borda solida em baixo de cada card*/
  border-radius: 0.25rem 0.25rem 0 0; /*Bordas superiores arredondadas*/
  text-align: center;
}

.card i {
  display: block;
  margin-bottom: 1.5rem;
  font-size: 5rem; /*Tamanho dos icone dos cards*/
  color: var(--base-color);
}

.card .title {
  font-size: 1.5rem;
  margin-bottom: 0.75rem;
}

/*============ TESTIMONIALS ===============*/

#testimonials {
  background: white;
}

#testimonials .container {
  margin-left: 0;
  margin-right: 0;
}

#testimonials header {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
  margin-bottom: 0;
}

#testimonials blockquote {
  padding: 2rem;
  box-shadow: 0px 0px 12px rgba(0, 0, 0, 0.08);
  border-radius: 0.25rem;
}

#testimonials blockquote p {
  position: relative;
  text-indent: 1.875rem;
  margin-bottom: 1.5rem;
  color: var(--title-color);
}

#testimonials blockquote p span {
  font: 400 3rem serif;
  position: absolute;
  top: -0.5rem;
  left: -1.875rem;
  color: var(--base-color);
}

#testimonials cite {
  display: flex;
  align-items: center;
  font-style: normal;
}

#testimonials cite img{
  width: 2rem;
  height: 2rem;
  object-fit: cover; /*object-fit = obijeto-ajuste :cover = cobrir. Pega a imagem que esta dentro da tag img e ajusta para cobrir todo o espaço*/
  clip-path: circle();/*Deixa a imagem circular*/
  margin-right: 0.5rem;
}

/* swiper*/

.swiper-slide {
  height: auto;
  padding: 4rem 1rem;
}

.swiper-pagination-bullet{
  width: 0.75rem;
  height: 0.75rem;
}

.swiper-pagination-bullet-active {
  background: var(--base-color);
}

/*============ CONTACT ===============*/

#contact .grid {
  gap: 4rem;
}

#contact .text p{
  margin-bottom: 2rem;
}

#contact .button {
  padding: 0 1rem;
}

#contact .button i {
  font-size: 1.5rem;
  margin-right: 0.625rem;
}

#contact ul.grid {
  gap: 2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
}

#contact ul li i {
  color: var(--base-color);
  font-size: 1.5rem;
  margin-right: 0.625rem;
}

#footer {
  background: var(--base-color);
}

/*============ FOOTER ===============*/

footer {
  background: var(--base-color);
}

footer.section {
  padding: 4rem 0;
}

footer .logo {
  display: inline-block;
  margin-bottom: 1.5rem;
}

footer .brand p{
  color: var(--text-color-light);
  margin-bottom: 0.75rem;
}

footer i {
  font-size: 1.5rem;
  color: var(--text-color-light);
}

footer .social a {
  margin-right: 2rem;
  transition: 0.3s;
  display: inline-block;
}

footer .social a:hover {
  transform: translateY(-8px);
}

/* Back to top  */

.back-to-top {
  background: var(--base-color);
  color: var(--text-color-light);

  position: fixed;
  right: 1rem;
  bottom: 1rem;

  padding: 0.5rem;
  clip-path: circle();

  font-size: 1.5rem;
  line-height: 0;

  visibility: hidden;
  opacity: 0;

  transition: 0.3s;
  transform: translateY(100%);
}

.back-to-top.show {
  visibility: visible;
  opacity: 1;
  transform: translateY(0);
}

/* ========= RESPONSIVO ==============*/
/*========== MEDIA QUERIES ===========*/
/*  extra large devices: 1200 > */
@media (min-width: 1200px) {
  /*reusanble classes*/
  .container {
    max-width: 1120px;
    margin-left: auto;
    margin-left: auto;
  }

  .section {
    padding: 10rem 0;
  }

  .section header,
  #testimonials header {
    max-width: 32rem;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
  }

  .button {
    height: 3.125rem;
  }

/* navigation */
  nav .menu {
    opacity: 1;
    visibility: visible;
    top: 0;
  }

    nav .menu ul {
      display: flex;
      gap: 2rem;
    }

    nav .menu ul li a.title {
      font: 400 1rem var(--body-font);
      -webkit-font-smoothing: antialiased;
    }

    nav .menu ul li a.title.active {
      font-weight: bold;
      -webkit-font-smoothing: auto;
    }

    nav .icon-menu {
      display: none;
    }

    /* Layout */
    main {
      margin-top: var(--header-height); /*calc  faz um função (cálculo)*/
    }

    /*home*/
    #home .container {
      grid-auto-flow: column;
      justify-content: space-between;
      margin: 0 auto;
    }

    #home .image {
      order: 1;
    }

    #home .text {
      order: 0;
      max-width: 24rem;
      text-align: left;
    }

    /* About */
    #about .container {
      margin: 0 auto;
      grid-auto-flow: column;
    }

    /* Services */
    .cards {
      grid-template-columns: 1fr 1fr 1fr ; /* 1fr = fração de cada card (flexivel) */
    }

    .card {
      padding-left: 3rem;
      padding-right: 3rem;
    }
    
    /* Testimonials */
    #testimonials .container {
      margin-left: auto;
      margin-right: auto;
    }
  
    /* Contact */
    #contact .container {
      grid-auto-flow: column;
      align-items: center;
    }

    #contact .text {
      max-width: 25rem;
    }

    /* Footer */

    footer.section {
      padding: 3.75rem;
    }

    footer .container {
      grid-auto-flow: column;
      align-items: center;
      justify-content: space-between;
    }

    footer .logo {
      font-size: 2.25rem;
    }

}
/*  large devices: 1023 >*/
/*  large devices: 992 >*/
@media (min-width: 992px) {  /*At-rules / rules = regras*/
  :root {
    --title-font-size: 2.25rem;
    --subtitle-font-size: 1.125rem;
  }
}

/*  medium devices 765 >*/